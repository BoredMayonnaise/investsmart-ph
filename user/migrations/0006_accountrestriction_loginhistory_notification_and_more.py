# Generated by Django 5.2.2 on 2025-06-08 10:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('user', '0005_profile_last_login_device'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountRestriction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('restriction_type', models.CharField(choices=[('withdrawal', 'Withdrawals Blocked'), ('investment', 'New Investments Blocked'), ('login', 'Login Temporarily Disabled')], max_length=20)),
                ('reason', models.TextField()),
                ('expires_at', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LoginHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('device', models.CharField(blank=True, max_length=255)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('was_successful', models.BooleanField(default=True)),
                ('failure_reason', models.CharField(blank=True, max_length=100)),
                ('is_suspicious', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Login Histories',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('system', 'System'), ('investment', 'Investment'), ('withdrawal', 'Withdrawal')], max_length=20)),
                ('is_read', models.BooleanField(default=False)),
                ('metadata', models.JSONField()),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReferralBonus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bonus_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('is_paid', models.BooleanField(default=False)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Referral Bonuses',
            },
        ),
        migrations.CreateModel(
            name='UserActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('action', models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('profile_update', 'Profile Update'), ('password_change', 'Password Change')], max_length=20)),
                ('ip_address', models.GenericIPAddressField()),
                ('metadata', models.JSONField(default=dict)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserLevelReward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveIntegerField(unique=True)),
                ('required_exp', models.PositiveIntegerField()),
                ('reward_bonus', models.DecimalField(decimal_places=2, max_digits=5)),
                ('badge_name', models.CharField(max_length=50)),
                ('icon', models.ImageField(blank=True, upload_to='level_badges/')),
            ],
            options={
                'ordering': ['level'],
            },
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dark_mode', models.BooleanField(default=False)),
                ('language', models.CharField(default='en', max_length=10)),
                ('email_notifications', models.BooleanField(default=True)),
                ('two_factor_auth', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveIndex(
            model_name='profile',
            name='user_profil_referra_0fd1d8_idx',
        ),
        migrations.RemoveIndex(
            model_name='profile',
            name='user_profil_signup__d7dd6f_idx',
        ),
        migrations.RemoveIndex(
            model_name='profile',
            name='user_profil_kyc_sta_c7d982_idx',
        ),
        migrations.RemoveIndex(
            model_name='profile',
            name='user_profil_created_991e13_idx',
        ),
        migrations.RenameField(
            model_name='bannedaccount',
            old_name='banned_at',
            new_name='created_at',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='browser',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='device_info',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='last_login_device',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='last_phone_update',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='manual_verification_override',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='notify_earnings',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='notify_new_plans',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='os',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='points',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='registration_attempts',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='signup_device',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='user_agent',
        ),
        migrations.AddField(
            model_name='bannedaccount',
            name='banned_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='banned_users', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bannedaccount',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='blockedip',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='blockedip',
            name='reason',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='profile',
            name='account_type',
            field=models.CharField(choices=[('free', 'Free'), ('investor', 'Investor'), ('admin', 'Admin')], db_index=True, default='free', max_length=10),
        ),
        migrations.AlterField(
            model_name='profile',
            name='email',
            field=models.EmailField(blank=True, db_index=True, max_length=254, null=True),
        ),
        migrations.AlterField(
            model_name='profile',
            name='is_banned',
            field=models.BooleanField(db_index=True, default=False),
        ),
        migrations.AlterField(
            model_name='profile',
            name='is_verified',
            field=models.BooleanField(db_index=True, default=False),
        ),
        migrations.AlterField(
            model_name='profile',
            name='kyc_status',
            field=models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], db_index=True, default='pending', max_length=10),
        ),
        migrations.AlterField(
            model_name='profile',
            name='phone',
            field=models.CharField(db_index=True, max_length=20),
        ),
        migrations.AlterField(
            model_name='profile',
            name='referral_code',
            field=models.CharField(blank=True, db_index=True, max_length=10, unique=True),
        ),
        migrations.AlterField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='profile',
            index=models.Index(fields=['is_verified', 'kyc_status'], name='user_profil_is_veri_3cdd5b_idx'),
        ),
        migrations.AddField(
            model_name='accountrestriction',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='imposed_restrictions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='accountrestriction',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restrictions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='loginhistory',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='login_history', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notification',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='referralbonus',
            name='referred_user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='referralbonus',
            name='referrer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referral_bonuses', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='useractivitylog',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='usersettings',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='referralbonus',
            unique_together={('referrer', 'referred_user')},
        ),
    ]
